    @prefix rr: <http://www.w3.org/ns/r2rml#> .
    @prefix nfl: <http://www.openlinskw.com/ontology/nfl-kg#> .
    @prefix nfl-stat: <http://demo.openlinksw.com/nfl/stat#> .
    @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
    @prefix void: <http://rdfs.org/ns/void#> .
    @prefix scovo: <http://purl.org/NET/scovo#> .
    @prefix aowl: <http://bblfish.net/work/atom-owl/2006-06-06/> .
    @prefix rdfv: <http://demo.openlinksw.com/nfl-kg#>

    <#TriplesMapGame>
        a rr:TriplesMap;
        rr:logicalTable [ rr:tableSchema "nfl" ; rr:tableOwner "pbp" ; rr:tableName "data" ];
        rr:subjectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/nfl-kg/play/{GameId}#this"; rr:class nfl:Game; rr:graph rdfv: ];
        rr:predicateObjectMap [ rr:predicateMap [rr:constant nfl:hasPlay] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/nfl-kg/play/{GameId}{Quarter}{Minute}{Second}{OffenseTeam}{DefenseTeam}{Down}{ToGo}{YardLine}#this" ]; ].

    <#TriplesMapPlay> 
        a rr:TriplesMap; 
        rr:logicalTable [ rr:tableSchema "nfl" ; rr:tableOwner "pbp" ; rr:tableName "data" ]; 
        rr:subjectMap [ rr:termType rr:IRI  ; rr:template "http://demo.openlinksw.com/nfl-kg/play/{GameId}{Quarter}{Minute}{Second}{OffenseTeam}{DefenseTeam}{Down}{ToGo}{YardLine}#this"; rr:class nfl:Play; rr:graph rdfv: ];
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasGameId ] ; rr:objectMap [ rr:column "GameId" ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasGameDate ] ; rr:objectMap [ rr:column "GameDate" ; rr:datatype xsd:dateTime]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasQuarter ] ; rr:objectMap [ rr:column "Quarter" ; rr:datatype xsd:integer]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasMinute ] ; rr:objectMap [ rr:column "Minute" ; rr:datatype xsd:integer]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasSecond ] ; rr:objectMap [ rr:column "Second" ; rr:datatype xsd:integer]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasOffenseTeam ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/nfl-kg/team/{OffenseTeam}#this" ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasDefenseTeam ] ; rr:objectMap [ rr:termType rr:IRI; rr:template "http://demo.openlinksw.com/nfl-kg/team/{DefenseTeam}#this" ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasDown ] ; rr:objectMap [ rr:column "Down" ; rr:datatype xsd:integer ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasTogo ] ; rr:objectMap [ rr:column "ToGo" ; rr:datatype xsd:integer ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasYardline ] ; rr:objectMap [ rr:column "YardLine" ; rr:datatype xsd:integer ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasSeriesfirstdown ] ; rr:objectMap [ rr:column "SeriesFirstDown" ; rr:datatype xsd:integer ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasNextScore ] ; rr:objectMap [ rr:column "NextScore" ; rr:datatype xsd:integer ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasDescription ] ; rr:objectMap [ rr:column "Description" ; rr:datatype xsd:string ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasTeamWin ] ; rr:objectMap [ rr:column "TeamWin" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasSeasonYear ] ; rr:objectMap [ rr:column "SeasonYear" ; rr:datatype xsd:integer]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasYards ] ; rr:objectMap [ rr:column "Yards" ; rr:datatype xsd:integer ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasFormation ] ; rr:objectMap [ rr:termtype rr:IRI; rr:template "http://www.openlinksw.com/ontology/nfl#{Formation}"]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasPlayType ] ; rr:objectMap [ rr:termtype rr:IRI; rr:template "http://www.openlinksw.com/ontology/nfl#{PlayType}" ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isRush ] ; rr:objectMap [ rr:column "IsRush"; ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isPass ] ; rr:objectMap [ rr:column "IsPass"; ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isIncomplete ] ; rr:objectMap [ rr:column "IsIncomplete" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isTouchdown ] ; rr:objectMap [ rr:column "IsTouchdown" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasPassType ] ; rr:objectMap [ rr:column "PassType" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isSack ] ; rr:objectMap [ rr:column "IsSack" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isChallenge ] ; rr:objectMap [ rr:column "IsChallenge" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isChallengeReversed ] ; rr:objectMap [ rr:column "IsChallengeReversed" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isMeasurement ] ; rr:objectMap [ rr:column "IsMeasurement" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isInterception ] ; rr:objectMap [ rr:column "IsInterception" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isFumble ] ; rr:objectMap [ rr:column "IsFumble" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isPenalty ] ; rr:objectMap [ rr:column "IsPenalty" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isTwoPointConversion ] ; rr:objectMap [ rr:column "IsTwoPointConversion" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isTwoPointConversionSuccessful ] ; rr:objectMap [ rr:column "IsTwoPointConversionSuccessful" ; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasRushDirection ] ; rr:objectMap [ rr:termtype rr:IRI; rr:template "http://www.openlinksw.com/ontology/nfl#Rush{RushDirection}"]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasYardLineFixed ] ; rr:objectMap [ rr:column "YardLineFixed"; rr:datatype xsd:string ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasYardLineDirection ] ; rr:objectMap [ rr:column "YardLineDirection"; rr:termType rr:IRI; rr:template "http://www.openlinskw.com/ontology{YardLineDirection}Direction"]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isPenaltyAccepted ] ; rr:objectMap [ rr:column "IsPenaltyAccepted"; rr:datatype xsd:boolean ]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasPenaltyTeam ] ; rr:objectMap [ rr:termtype rr:IRI; rr:template "http://www.openlinksw.com/ontology/nfl#{PenaltyTeam}"]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:isNoPlay ] ; rr:objectMap [ rr:column "IsNoPlay"; rr:datatype xsd:boolean]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasPenaltyType ] ; rr:objectMap [ rr:termtype rr:IRI; rr:template "http://www.openlinksw.com/ontology/nfl#{PenaltyType}"]; ] ;
        rr:predicateObjectMap [ rr:predicateMap [ rr:constant nfl:hasPenaltyYards ] ; rr:objectMap [ rr:column "PenaltyYards"; rr:datatype xsd:integer ]; ] .
